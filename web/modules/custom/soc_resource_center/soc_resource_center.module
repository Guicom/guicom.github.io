<?php

use Drupal\views\ViewExecutable;
use Drupal\views\Plugin\views\query\QueryPluginBase;
use Drupal\views\Views;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_views_query_alter().
 *
 * Alter query of resource-center page.
 * Exclude nid on display page_1 from display block_1
 *
 * @param \Drupal\views\ViewExecutable $view
 * @param \Drupal\views\Plugin\views\query\QueryPluginBase $query
 */
function soc_resource_center_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {
  if ($view->id() === 'resource_center' && $view->getDisplay()->display['id'] === 'page_1') {
    $view_block = Views::getView('resource_center_highlight');
    if (!empty($view_block)) {
      if ($view_block->setDisplay('block_1')) {
        $view_block->execute();
        // If the view returns results...
        if (!empty($view_block->result)) {
          $nid = $view_block->result[0]->_object->getEntity()->nid->value;
          if (!empty($nid)) {
            $query->addCondition('nid', $nid, '<>');
          }
        }
      }
    }
  }
}

/**
 * Implements hook_form_alter().
 *
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 * @param $form_id
 */
function soc_resource_center_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (strcmp($form_id, 'node_resource_edit_form') === 0 || strcmp($form_id, 'node_resource_form') === 0) {
    $sticky_resource_description =  t('will only be displayed if a thumb is attached');
    $form['sticky']['widget']['value']['#description'] = $sticky_resource_description;
  }
}

/**
 * Implements hook_preprocess_breadcrumb().
 * @param $variables
 */
function soc_resource_center_preprocess_breadcrumb(&$variables) {
  if (\Drupal::routeMatch()->getRouteName() === "view.resource_center.page_1") {
    $block = \Drupal\block\Entity\Block::load('resourcecenterhero');
    $variables['breadcrumb'][1] = array(
      'text' => $block->label()
    );
  }
}
