<?php

use Drupal\Core\Entity\EntityStorageException;
use Drupal\Core\Session\AccountInterface;
use Drupal\Core\Site\Settings;
use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_install().
 * Create countries.
 */
function soc_content_hub_install() {
  // Create countries terms.
  $countries = [
    'Belgium',
    'China',
    'France',
    'Belgium',
    'India',
    'Italy',
    'Poland',
    'Spain',
    'Switzerland',
    'United Kingdom',
    'USA',
  ];

  /** @var \Drupal\Core\Entity\EntityStorageInterface $termStorage */
  $termStorage = \Drupal::entityTypeManager()
    ->getStorage('taxonomy_term');

  foreach ($countries as $country) {
    if (!$termStorage->loadByProperties(['name' => $country, 'vid' => 'country'])) {
      $term = Term::create(
        [
          'name' => $country,
          'vid' => 'country',
        ]
      );
      $term->enforceIsNew();
      try {
        $term->save();
      } catch (EntityStorageException $e) {
        \Drupal::logger('soc_content_hub')->error($e->getMessage());
      }
    }
  }

  // Create entityshare user.
  $username = Settings::get('entity_share_username', 'entityshare');
  $password = Settings::get('entity_share_password', 'entityshare');
  try {
    $user = \Drupal::entityTypeManager()->getStorage('user')->loadByProperties([
      'name' => $username,
    ]);
  } catch (\Exception $e) {
    \Drupal::logger('soc_content_hub')->error($e->getMessage());
  }
  if ($user) {
    \Drupal::logger('soc_content_hub')
      ->notice("an account with username $username already exist");
  }
  else {
    $user = \Drupal\user\Entity\User::create([
      'langcode' => \Drupal::languageManager()->getDefaultLanguage()->getId(),
      'preferred_langcode' => \Drupal::languageManager()
        ->getDefaultLanguage()
        ->getId(),
      'name' => $username,
      'status' => 1,
      'pass' => $password,
      'roles' => [AccountInterface::AUTHENTICATED_ROLE, 'entity_share'],
      'uuid' => 'cd0d9446-cb19-4e87-9dcf-d3bdc37a70a7',
    ]);
    try {
      $user->save();
    } catch (\Exception $e) {
      \Drupal::logger('soc_content_hub')->error($e->getMessage());
    }

  }
}
