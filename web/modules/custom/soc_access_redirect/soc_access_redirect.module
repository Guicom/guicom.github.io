<?php

/**
 * @file
 * Contains prae_core.module.
 */

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Session\AccountInterface;


/*******************************
-------- SECURITY HOOKS --------
 *******************************/

function soc_access_redirect_node_view_alter(array &$build, Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display) {
  if ($entity->bundle() == 'thank_you_page' || $entity->bundle() == 'landing_page') {
    $build['#cache']['max-age'] = 0;
    \Drupal::service('page_cache_kill_switch')->trigger();
  }
}

/**
 * Implements hook_ENTITY_TYPE_access() to control files access.
 *
 * @param \Drupal\Core\Entity\EntityInterface $entity
 * @param $operation
 * @param \Drupal\Core\Session\AccountInterface $account
 *
 * @return \Drupal\Core\Access\AccessResultInterface
 */
function soc_access_redirect_file_access(EntityInterface  $entity, $operation, AccountInterface $account) {
  $access = AccessResult::neutral();
  if($operation === 'download'){
    // Get fid
    $fid = $entity->id();
    if(!empty($fid)){
      $file = \Drupal\file\Entity\File::load($fid);
    }
    if(!empty($file)) {
      $references = file_get_file_references($file);
    }

    $ids = [];
    // get ids of media reference by fid
    if(!empty($references)) {
      foreach ($references as $reference) {
        if(isset($reference['media'])) {
          foreach ($reference['media'] as $media) {
            $ids[] = $media->id();
          }
        }
      }
    }
    // Request on noeuds with associated media id
    $nb_resultats = 0;
    if(!empty($ids)) {
      $query = \Drupal::entityQuery('node');
      $query->condition('type', 'thank_you_page');
      $query->condition('field_file', $ids, 'IN');
      $nb_resultats = $query->count()->execute();
    }


    // If result compare media id with requested media id.
    if($nb_resultats > 0){
      $cookies = \Drupal::request()->cookies->all();
      $access_test = false;
      if(!empty($cookies['soc_private_media_access'])){
        $soc_private_media_access = unserialize($cookies['soc_private_media_access']);
        foreach ($ids as $id){
          if (in_array($id, $soc_private_media_access)) {
            $access_test = true;
          }
        }
      }

      if($access_test === false){
        $access = AccessResult::forbidden();
      }
    }
  }
  return $access;
}
