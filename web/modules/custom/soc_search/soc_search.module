<?php
/**
 * @file
 * Handle search integration.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\views\ViewExecutable;
use Drupal\Component\Utility\Xss;

/**
 * Implements hook_form_FORM_ID_alter() for "views_exposed_form".
 *
 * Adds autocompletion to input fields for fulltext keywords on views with
 * exposed filters.
 *
 * @see \Drupal\views\Form\ViewsExposedForm
 * @see \Drupal\search_api_autocomplete\Plugin\search_api_autocomplete\search\Views
 */
function soc_search_form_views_exposed_form_alter(array &$form, FormStateInterface $form_state) {
  if (!empty($form['#id']) && $form['#id'] === 'views-exposed-form-global-search-page-1') {
    if (!empty($form['search_api_fulltext'])) {
      $form['search_api_fulltext']['#type'] = 'soc_search_search_api_autocomplete';
      $form['search_api_fulltext']['#attributes']['placeholder'] = \Drupal::config('soc_search.settings')->get('placeholder') ?? '';
      $form['search_api_fulltext']['#attributes']['autocomplete'] = 'off';
      $form['actions']['submit']['#value'] = t('Search');
    }
  }
}

/**
 * Implements hook_views_pre_render().
 * @param \Drupal\views\ViewExecutable $view
 */
function soc_search_views_pre_render(ViewExecutable $view) {
  $route_name = \Drupal::routeMatch()->getRouteName();
  if ($route_name === "search.view") {
    $title = \Drupal::config('soc_search.settings')->get('title');
    $title_searched = \Drupal::config('soc_search.settings')->get('title_searched');
    $title_no_result = \Drupal::config('soc_search.settings')->get('title_no_result');

    $query = Xss::filter(\Drupal::request()->query->get('search_api_fulltext'));
    if ($query) {
      $title = str_replace('@word', $query, $title_searched);
    }
    if (empty($view->total_rows)) {
      if (!empty($title_no_result)) {
        $title = $title_no_result;
      }
      $title = str_replace('@total', $view->total_rows, $title);
    }
    else {
      $title = str_replace('@total', $view->total_rows, $title);
    }

    $view->setTitle($title);
  }
}
