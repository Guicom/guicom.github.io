image: docker:stable

services:
  - docker:dind

variables:
  # For non-Kubernetes executors, we use tcp://docker:2375/
  # Provoque un changement dans la branche
  #DOCKER_HOST: tcp://localhost:2375/
  # DOCKER_HOST: "${HOSTNAME}-docker"
  # When using dind, it's wise to use the overlayfs driver for
  # improved performance.
  DOCKER_HOST: tcp://docker:2376/
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_DRIVER: overlay2
  DOCKER_IMAGE_BUILD_PATH: docker_image

stages:
  - code_quality
  - functional_testing
  - build
  - deploy

cache: &global_cache
  key: ${CI_JOB_NAME}
  paths:
    - vendor
    - web/node_modules

.behat_build_project: &behat_build_project
  artifacts:
    paths:
      - "${DOCKER_IMAGE_BUILD_PATH}/"
  variables:
    # No spaces.
    MINK_DRIVER_ARGS_WEBDRIVER: '["chrome",{"browserName":"chrome","chromeOptions":{"args":["--whitelisted-ips","--disable-gpu","--headless","--no-sandbox","--window-size=1920,1080"]}},"http://localhost:4444/wd/hub"]'
    APACHE_RUN_USER: "www-data"
    APACHE_RUN_GROUP: "www-data"
    # Selenium extra options, see
    # https://github.com/SeleniumHQ/docker-selenium#se_opts-selenium-configuration-options
    SE_OPTS: ""
  before_script:
    - mkdir -p "${DOCKER_IMAGE_BUILD_PATH}/"
    - apk add --no-cache py-pip python-dev libffi-dev openssl-dev gcc libc-dev make
    - pip install docker-compose
    - cp ${CI_PROJECT_DIR}/docker-compose.example.gitlab-ci.yml ${CI_PROJECT_DIR}/docker-compose.yml
    - cp ${CI_PROJECT_DIR}/phing/example.build.properties.local ${CI_PROJECT_DIR}/phing/build.properties.local
    - cp ${CI_PROJECT_DIR}/tests/behat/behat.example.yml ${CI_PROJECT_DIR}/tests/behat/behat.local.yml
    - docker-compose up -d
    - docker-compose exec -u root -T web bash -c "cd /var/www/html/ && composer install"
    - docker-compose exec -u root -T web bash -c "cd /var/www/html/tests/behat && composer install"
    - docker-compose exec -u root -T web bash -c "cd /var/www/html/ && ./vendor/bin/phing deploy:install"
    - echo $NEXTPAGE_PWD
    - docker-compose exec -u root -T web bash -c 'cd /var/www/html/config/drupal && cat settings.local.php && sed -ri s/NEXTPAGE_PWD/"${NEXTPAGE_PWD}"/g settings.local.php && cat settings.local.php'
    - docker-compose exec -u root -T web bash -c "chown -R web:www-data /var/www/html/"

.build_project: &build_project
  artifacts:
    paths:
      - "${DOCKER_IMAGE_BUILD_PATH}/"
  variables:
    # No spaces.
    APACHE_RUN_USER: "www-data"
    APACHE_RUN_GROUP: "www-data"
  before_script:
    - mkdir -p "${DOCKER_IMAGE_BUILD_PATH}/"
    - apk add --no-cache py-pip python-dev libffi-dev openssl-dev gcc libc-dev make
    - pip install docker-compose
    - cp ${CI_PROJECT_DIR}/docker-compose.example.gitlab-ci.yml ${CI_PROJECT_DIR}/docker-compose.yml
    - cp ${CI_PROJECT_DIR}/phing/example.build.properties.local ${CI_PROJECT_DIR}/phing/build.properties.local
    - docker-compose up -d
    - docker-compose exec -u root -T web bash -c "cd /var/www/html/ && make install"
    - docker-compose exec -u root -T web bash -c "cd /var/www/html/ && make set-kubernetes-configs"
    - docker-compose exec -u root -T web bash -c "chown -R web:www-data /var/www/html/"

# SonarQube Runner
sonarqube:
  stage: code_quality
  tags:
    - actency
  image: ciricihq/gitlab-sonar-scanner
  variables:
    SONAR_URL: http://sonarqube.actency.fr
    SONAR_ANALYSIS_MODE: preview
  script:
    - gitlab-sonar-scanner -Dsonar.analysis.mode=publish -Dsonar.gitlab.ref_name=$CI_COMMIT_REF_NAME -Dsonar.gitlab.project_id=$CI_PROJECT_ID -Dsonar.login=$SONARQUBE_ACCESS_KEY -Dsonar.gitlab.user_token=$GITLAB_ACCESS_KEY
  only:
    - merge_requests

# Behat tests from tests/ folder.
behat:
  stage: functional_testing
  tags:
    - actency
  cache:
    # inherit all global cache settings
    <<: *global_cache
  extends:
    - .behat_build_project
  script:
    - docker-compose exec -u web -T web bash -c "cd /var/www/html && ./vendor/bin/phing behat:run -Dbehat.bin=tests/behat/bin/behat"
  artifacts:
    name: "$CI_COMMIT_REF_NAME"
    paths:
      - /builds/socomec/webfactory/socomec.com/tests/behat/report/html
    expire_in: 1 week
    when: always
  only:
    - merge_requests

.push-web-image: &push-web-image
  stage: build
  tags:
    - actency
  cache:
    # inherit all global cache settings
    <<: *global_cache
  extends:
    - .build_project
  script:
    - cd iaac && make push-web-image

build:
  variables:
    ENVIRONMENT: $CI_COMMIT_REF_NAME
  extends:
    - .push-web-image
  only:
    refs:
      - recette
      - develop

build-prod:
  variables:
    ENVIRONMENT: "production"
  extends:
      - .push-web-image
  only:
    refs:
      - feature/iaac
      - master

deploy-prod:
  stage: deploy
  image: alpine/helm:3.0.3
  tags:
    - socomec
  variables:
    ENVIRONMENT: "production"
    KUBE_LATEST_VERSION: v1.14.2
    NAMESPACE: webfactory-prod
  before_script:
    - apk add --no-cache make jq curl
    - curl -L https://storage.googleapis.com/kubernetes-release/release/${KUBE_LATEST_VERSION}/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl
    - chmod +x /usr/local/bin/kubectl
  script:
    - helm ls --namespace ${NAMESPACE}
    - cd iaac/helm && helm upgrade -i --wait --namespace ${NAMESPACE} -f ${ENVIRONMENT}.yaml ${NAMESPACE}-drupal drupal
    - cd .. && make wait-deployment-rollout && make wait-pod-to-be-ready && make run-drupal-update
  only:
    refs:
      - feature/iaac
      - master
  when: manual

deploy-rct:
  stage: deploy
  image: alpine/helm:3.0.3
  tags:
    - socomec
  variables:
    ENVIRONMENT: $CI_COMMIT_REF_NAME
    KUBE_LATEST_VERSION: v1.14.2
    NAMESPACE: webfactory-prod
  before_script:
    - apk add --no-cache make jq curl
    - curl -L https://storage.googleapis.com/kubernetes-release/release/${KUBE_LATEST_VERSION}/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl
    - chmod +x /usr/local/bin/kubectl
  script:
    - helm ls --namespace ${NAMESPACE}
    - cd iaac/helm && helm upgrade -i --wait --namespace ${NAMESPACE} -f ${ENVIRONMENT}.yaml ${NAMESPACE}-drupal drupal
    - cd .. && make wait-deployment-rollout && make wait-pod-to-be-ready && make run-drupal-update
  only:
    refs:
      - recette
  when: manual

deploy-dev:
  stage: deploy
  image: alpine/helm:3.0.3
  tags:
    - socomec
  variables:
    ENVIRONMENT: $CI_COMMIT_REF_NAME
    KUBE_LATEST_VERSION: v1.14.2
    NAMESPACE: webfactory-dev
  before_script:
    - apk add --no-cache make jq curl
    - curl -L https://storage.googleapis.com/kubernetes-release/release/${KUBE_LATEST_VERSION}/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl
    - chmod +x /usr/local/bin/kubectl
  script:
    - helm ls --namespace ${NAMESPACE}
    - cd iaac/helm && helm upgrade -i --wait --namespace ${NAMESPACE} -f ${ENVIRONMENT}.yaml ${NAMESPACE}-drupal drupal
    - cd .. && make wait-deployment-rollout && make wait-pod-to-be-ready && make run-drupal-update
  only:
    refs:
      - develop
  when: manual
